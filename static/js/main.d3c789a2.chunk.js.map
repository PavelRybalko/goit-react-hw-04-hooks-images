{"version":3,"sources":["components/ImageGalleryItem/ImageGalleryItem.module.css","components/Modal/Modal.module.css","components/Container/Container.module.css","components/ImageGallery/ImageGallery.module.css","components/Loader/Loader.module.css","components/Button/Button.module.css","components/Container/Container.js","components/Searchbar/Searchbar.js","components/ImageGalleryItem/ImageGalleryItem.js","components/ImageGallery/ImageGallery.js","components/Loader/Loader.js","components/Modal/Modal.js","components/Button/Button.js","services/pixabay-api.js","App.js","index.js","components/Searchbar/Searchbar.module.css"],"names":["module","exports","Container","children","className","s","Searchbar","onSubmit","useState","query","setQuery","SearchForm","e","preventDefault","trim","toast","error","type","button","buttonLabel","onChange","value","target","toLowerCase","input","autoComplete","autoFocus","placeholder","ImageGalleryItem","item","onClick","data-largeimageurl","largeImageURL","src","webformatURL","alt","tags","image","ImageGallery","items","map","id","Loader","spinner","color","height","width","modalRoot","document","querySelector","Modal","onClose","activeImage","useEffect","handleKeyDown","code","window","addEventListener","removeEventListener","url","createPortal","Overlay","currentTarget","Button","allyProps","defaultProps","api","fetchImages","searchQuery","page","pageSize","fetch","then","res","ok","json","Promise","reject","Error","App","setSearchQuery","setActiveImage","images","setImages","setPage","setError","showLoader","setShowLoader","showButton","setShowButton","showModal","setShowModal","options","pixabayApi","hits","totalHits","length","success","prevImages","catch","finally","scrollTo","top","documentElement","offsetHeight","behavior","toggleModal","state","message","largeimageurl","dataset","aria-label","autoClose","ReactDOM","render","StrictMode","getElementById"],"mappings":"wIACAA,EAAOC,QAAU,CAAC,iBAAmB,2CAA2C,MAAQ,kC,mBCAxFD,EAAOC,QAAU,CAAC,QAAU,uBAAuB,MAAQ,uB,mBCA3DD,EAAOC,QAAU,CAAC,UAAY,+B,mBCA9BD,EAAOC,QAAU,CAAC,aAAe,qC,mBCAjCD,EAAOC,QAAU,CAAC,QAAU,0B,mBCA5BD,EAAOC,QAAU,CAAC,OAAS,yB,8JCUZC,EARG,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OAChB,qBAAKC,UAAWC,IAAEH,UAAlB,SAA8BC,K,gBCCjB,SAASG,EAAT,GAAkC,IAAbC,EAAY,EAAZA,SAAY,EACpBC,mBAAS,IADW,mBACvCC,EADuC,KAChCC,EADgC,KAgB9C,OACE,wBAAQN,UAAWC,IAAEC,UAArB,SACE,uBAAMF,UAAWC,IAAEM,WAAYJ,SAbd,SAAAK,GAGnB,GAFAA,EAAEC,iBAEmB,KAAjBJ,EAAMK,OACR,OAAOC,IAAMC,MAAM,qIAGrBT,EAASE,GACTC,EAAS,KAKP,UACE,wBAAQO,KAAK,SAASb,UAAWC,IAAEa,OAAnC,SACE,sBAAMd,UAAWC,IAAEc,YAAnB,sBAGF,uBACEC,SArBa,SAAC,GAAD,IAAaC,EAAb,EAAGC,OAAUD,MAAb,OAA2BX,EAASW,EAAME,gBAsBvDF,MAAOZ,EACPL,UAAWC,IAAEmB,MACbP,KAAK,OACLQ,aAAa,MACbC,WAAS,EACTC,YAAY,kC,qBCTPC,EAvBU,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,QAAT,OACvB,oBAAI1B,UAAWC,IAAEuB,iBAAjB,SACE,qBACEE,QAAS,SAAAlB,GACPkB,EAAQlB,IAEVmB,qBAAoBF,EAAKG,cACzBC,IAAKJ,EAAKK,aACVC,IAAKN,EAAKO,KACVhC,UAAWC,IAAEgC,W,iBCSJC,EAjBM,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOT,EAAV,EAAUA,QAAV,OACnB,oBAAI1B,UAAWC,IAAEiC,aAAjB,SACGC,EAAMC,KAAI,SAAAX,GAAI,OACb,cAAC,EAAD,CAAgCA,KAAMA,EAAMC,QAASA,GAA9BD,EAAKY,U,0CCFnB,SAASC,IAEtB,OACE,cAAC,IAAD,CACEtC,UAAWC,IAAEsC,QACb1B,KAAK,WACL2B,MAAM,UACNC,OAAQ,IACRC,MAAO,M,qBCRPC,EAAYC,SAASC,cAAc,eAE1B,SAASC,EAAT,GAA0C,IAAzBC,EAAwB,EAAxBA,QAASC,EAAe,EAAfA,YACvCC,qBAAU,WACR,IAAMC,EAAgB,SAAA1C,GACL,WAAXA,EAAE2C,MACJJ,KAKJ,OADAK,OAAOC,iBAAiB,UAAWH,GAC5B,WACLE,OAAOE,oBAAoB,UAAWJ,MAEvC,CAACH,IAEJ,IAMQhB,EAAaiB,EAAbjB,IAAKwB,EAAQP,EAARO,IAEb,OAAOC,uBACL,qBAAKxD,UAAWC,IAAEwD,QAAS/B,QATD,SAAC,GAA8B,EAA5BR,SAA4B,EAApBwC,eAEnCX,KAOF,SACE,qBAAK/C,UAAWC,IAAE6C,MAAlB,SACE,qBAAKjB,IAAK0B,EAAKxB,IAAKA,QAGxBY,G,qCChCEgB,EAAS,SAAC,GAAD,IAAG5D,EAAH,EAAGA,SAAU2B,EAAb,EAAaA,QAAYkC,EAAzB,6CACb,gDACE/C,KAAK,SACLb,UAAWC,IAAE0D,OACbjC,QAAS,WACPA,MAEEkC,GANN,aAQG7D,MAIL4D,EAAOE,aAAe,CACpBnC,QAAS,kBAAM,MACf3B,SAAU,MASG4D,QCTAG,EAJH,CACVC,YAbkB,SAAC,GAAmD,IAAD,IAAhDC,mBAAgD,MAAlC,GAAkC,MAA9BC,YAA8B,MAAvB,EAAuB,MAApBC,gBAAoB,MAAT,GAAS,EACrE,OAAOC,MAAM,8BAAD,OACoBH,EADpB,iBACwCC,EADxC,gBAHC,qCAGD,6DAC+GC,IACzHE,MAAK,SAAAC,GACL,OAAIA,EAAIC,GACCD,EAAIE,OAGNC,QAAQC,OAAO,IAAIC,MAAJ,yHCEX,SAASC,IAAO,IAAD,EACUvE,mBAAS,IADnB,mBACrB4D,EADqB,KACRY,EADQ,OAEUxE,mBAAS,MAFnB,mBAErB4C,EAFqB,KAER6B,EAFQ,OAGAzE,mBAAS,IAHT,mBAGrB0E,EAHqB,KAGbC,EAHa,OAIJ3E,mBAAS,GAJL,mBAIrB6D,EAJqB,KAIfe,EAJe,OAKF5E,mBAAS,MALP,mBAKrBQ,EALqB,KAKdqE,EALc,OAMQ7E,oBAAS,GANjB,mBAMrB8E,EANqB,KAMTC,EANS,OAOQ/E,oBAAS,GAPjB,mBAOrBgF,EAPqB,KAOTC,EAPS,OAQMjF,oBAAS,GARf,mBAQrBkF,EARqB,KAQVC,EARU,KAkB5BtC,qBAAU,WAiCRe,GAAemB,GAAc,GAC7BnB,GAjCoB,WAClB,IAAMwB,EAAU,CAAExB,cAAaC,QAE/BwB,EACG1B,YAAYyB,GACZpB,MAAK,SAAAC,GAAQ,IACJqB,EAAoBrB,EAApBqB,KAAMC,EAActB,EAAdsB,UAERD,EAAKE,SACTjF,IAAMkF,QAAQ,oIACdd,GAAU,SAAAe,GAAU,4BAAQA,GAAR,YAAuBJ,OAC3CL,GAAc,IAGXK,EAAKE,QACRjF,IAAMC,MAAN,mEAA2BoD,EAA3B,mGAGE2B,GAAa,IACfN,GAAc,MAGjBU,OAAM,SAAAnF,GAAK,OAAIqE,EAASrE,MACxBoF,SAAQ,WACPb,GAAc,GACd/B,OAAO6C,SAAS,CACdC,IAAKtD,SAASuD,gBAAgBC,aAC9BC,SAAU,cAMHtC,KACd,CAACC,EAAaC,IAEjB,IAcMqC,EAAc,WAClBf,GAAa,SAAAgB,GAAK,OAAKA,MAGzB,OACE,eAAC,EAAD,WACE,cAACrG,EAAD,CAAWC,SAjEO,SAAAE,GAChB2D,IAAgB3D,IACpBuE,EAAevE,GACf0E,EAAU,IACVC,EAAQ,GACRC,EAAS,UA6DNrE,GAAS,6BAAKA,EAAM4F,UAEpB1B,IAAWlE,GAAS,cAAC,EAAD,CAAcuB,MAAO2C,EAAQpD,QArBpC,SAAC,GAAgB,IAAdR,EAAa,EAAbA,OACXuF,EAAkBvF,EAAOwF,QAAzBD,cACA1E,EAAQb,EAARa,IAER8C,EAAe,CACbtB,IAAKkD,EACL1E,IAAKA,IAGPuE,OAaGhB,GAAa,cAACxC,EAAD,CAAOC,QAASuD,EAAatD,YAAaA,IAEvDkC,GAAc,cAAC5C,EAAD,IACd8C,GACC,cAAC,EAAD,CAAQ1D,QA5BQ,kBAAMsD,GAAQ,SAAAuB,GAAK,OAAIA,EAAQ,MA4BfI,aAAW,YAA3C,uBAKF,cAAC,IAAD,CAAgBC,UAAW,SC/FjCC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACpC,EAAD,MAEF/B,SAASoE,eAAe,U,kBCR1BpH,EAAOC,QAAU,CAAC,UAAY,6BAA6B,WAAa,8BAA8B,OAAS,0BAA0B,YAAc,+BAA+B,MAAQ,4B","file":"static/js/main.d3c789a2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGalleryItem\":\"ImageGalleryItem_ImageGalleryItem__3nsgE\",\"image\":\"ImageGalleryItem_image__uUonN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Overlay\":\"Modal_Overlay__2IrYS\",\"Modal\":\"Modal_Modal__2GV43\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"Container_Container__2BDEI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGallery\":\"ImageGallery_ImageGallery__3Cg0n\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"spinner\":\"Loader_spinner__316zB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__2HBZs\"};","import PropTypes from 'prop-types';\nimport s from './Container.module.css';\n\nconst Container = ({ children }) => (\n  <div className={s.Container}>{children}</div>\n);\n\nContainer.propTypes = {\n  children: PropTypes.node,\n};\n\nexport default Container;\n","import React, { useState } from 'react';\nimport { toast } from 'react-toastify';\nimport PropTypes from 'prop-types';\nimport s from './Searchbar.module.css';\n\nexport default function Searchbar({ onSubmit }) {\n  const [query, setQuery] = useState('');\n\n  const handleChange = ({ target: { value } }) => setQuery(value.toLowerCase());\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (query.trim() === '') {\n      return toast.error('Введите слово для поиска');\n    }\n\n    onSubmit(query);\n    setQuery('');\n  };\n\n  return (\n    <header className={s.Searchbar}>\n      <form className={s.SearchForm} onSubmit={handleSubmit}>\n        <button type=\"submit\" className={s.button}>\n          <span className={s.buttonLabel}>Search</span>\n        </button>\n\n        <input\n          onChange={handleChange}\n          value={query}\n          className={s.input}\n          type=\"text\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search images and photos\"\n        />\n      </form>\n    </header>\n  );\n}\n\nSearchbar.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport s from './ImageGalleryItem.module.css';\n\nconst ImageGalleryItem = ({ item, onClick }) => (\n  <li className={s.ImageGalleryItem}>\n    <img\n      onClick={e => {\n        onClick(e);\n      }}\n      data-largeimageurl={item.largeImageURL}\n      src={item.webformatURL}\n      alt={item.tags}\n      className={s.image}\n    />\n  </li>\n);\n\nImageGalleryItem.propTypes = {\n  onClick: PropTypes.func.isRequired,\n  item: PropTypes.shape({\n    largeImageURL: PropTypes.string.isRequired,\n    webformatURL: PropTypes.string.isRequired,\n    tags: PropTypes.string.isRequired,\n  }),\n};\n\nexport default ImageGalleryItem;\n","import PropTypes from 'prop-types';\nimport ImageGalleryItem from '../ImageGalleryItem/ImageGalleryItem';\nimport s from './ImageGallery.module.css';\n\nconst ImageGallery = ({ items, onClick }) => (\n  <ul className={s.ImageGallery}>\n    {items.map(item => (\n      <ImageGalleryItem key={item.id} item={item} onClick={onClick} />\n    ))}\n  </ul>\n);\n\nImageGallery.propTypes = {\n  onClick: PropTypes.func.isRequired,\n  items: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n    }),\n  ),\n};\n\nexport default ImageGallery;\n","import React from 'react';\nimport MyLoader from 'react-loader-spinner';\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\nimport s from './Loader.module.css';\n\nexport default function Loader() {\n  //other logic\n  return (\n    <MyLoader\n      className={s.spinner}\n      type=\"TailSpin\"\n      color=\"#00BFFF\"\n      height={100}\n      width={100}\n    />\n  );\n}\n","import { createPortal } from 'react-dom';\nimport PropTypes from 'prop-types';\nimport React, { useEffect } from 'react';\nimport s from './Modal.module.css';\n\nconst modalRoot = document.querySelector('#modal-root');\n\nexport default function Modal({ onClose, activeImage }) {\n  useEffect(() => {\n    const handleKeyDown = e => {\n      if (e.code === 'Escape') {\n        onClose();\n      }\n    };\n\n    window.addEventListener('keydown', handleKeyDown);\n    return () => {\n      window.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [onClose]);\n\n  const handleBackDropClick = ({ target, currentTarget }) => {\n    if (target === currentTarget) {\n      onClose();\n    }\n  };\n\n  const { alt, url } = activeImage;\n\n  return createPortal(\n    <div className={s.Overlay} onClick={handleBackDropClick}>\n      <div className={s.Modal}>\n        <img src={url} alt={alt} />\n      </div>\n    </div>,\n    modalRoot,\n  );\n}\n\nModal.propTypes = {\n  onClose: PropTypes.func.isRequired,\n  activeImage: PropTypes.shape({\n    alt: PropTypes.string.isRequired,\n    url: PropTypes.string.isRequired,\n  }),\n};\n","import PropTypes from 'prop-types';\nimport s from './Button.module.css';\n\nconst Button = ({ children, onClick, ...allyProps }) => (\n  <button\n    type=\"button\"\n    className={s.Button}\n    onClick={() => {\n      onClick();\n    }}\n    {...allyProps}\n  >\n    {children}\n  </button>\n);\n\nButton.defaultProps = {\n  onClick: () => null,\n  children: null,\n};\n\nButton.propTypes = {\n  onClick: PropTypes.func,\n  children: PropTypes.node,\n  'aria-label': PropTypes.string.isRequired,\n};\n\nexport default Button;\n","const apiKey = '18705092-a3d0db19a14bd823df17dac7b';\n\nconst fetchImages = ({ searchQuery = '', page = 1, pageSize = 12 }) => {\n  return fetch(\n    `https://pixabay.com/api/?q=${searchQuery}&page=${page}&key=${apiKey}&image_type=photo&orientation=horizontal&per_page=${pageSize}`,\n  ).then(res => {\n    if (res.ok) {\n      return res.json();\n    }\n\n    return Promise.reject(new Error(`Упс, произошла ошибка`));\n  });\n};\n\nconst api = {\n  fetchImages,\n};\n\nexport default api;\n","import { useState, useEffect } from 'react';\nimport { ToastContainer } from 'react-toastify';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport Container from './components/Container';\nimport Searchbar from './components/Searchbar';\nimport ImageGallery from './components/ImageGallery';\nimport Loader from './components/Loader';\nimport Modal from './components/Modal';\nimport Button from './components/Button';\nimport pixabayApi from './services/pixabay-api';\n\nexport default function App() {\n  const [searchQuery, setSearchQuery] = useState('');\n  const [activeImage, setActiveImage] = useState(null);\n  const [images, setImages] = useState([]);\n  const [page, setPage] = useState(1);\n  const [error, setError] = useState(null);\n  const [showLoader, setShowLoader] = useState(false);\n  const [showButton, setShowButton] = useState(false);\n  const [showModal, setShowModal] = useState(false);\n\n  const onChangeQuery = query => {\n    if (searchQuery === query) return;\n    setSearchQuery(query);\n    setImages([]);\n    setPage(1);\n    setError(null);\n  };\n\n  useEffect(() => {\n    const fetchImages = () => {\n      const options = { searchQuery, page };\n\n      pixabayApi\n        .fetchImages(options)\n        .then(res => {\n          const { hits, totalHits } = res;\n\n          if (!!hits.length) {\n            toast.success('Запрос выполнен успешно');\n            setImages(prevImages => [...prevImages, ...hits]);\n            setShowButton(true);\n          }\n\n          if (!hits.length) {\n            toast.error(`По запросу \"${searchQuery}\" ничего не найдено`);\n          }\n\n          if (totalHits <= 12) {\n            setShowButton(false);\n          }\n        })\n        .catch(error => setError(error))\n        .finally(() => {\n          setShowLoader(false);\n          window.scrollTo({\n            top: document.documentElement.offsetHeight,\n            behavior: 'smooth',\n          });\n        });\n    };\n\n    searchQuery && setShowLoader(true);\n    searchQuery && fetchImages();\n  }, [searchQuery, page]);\n\n  const incrementPage = () => setPage(state => state + 1);\n\n  const openModal = ({ target }) => {\n    const { largeimageurl } = target.dataset;\n    const { alt } = target;\n\n    setActiveImage({\n      url: largeimageurl,\n      alt: alt,\n    });\n\n    toggleModal();\n  };\n\n  const toggleModal = () => {\n    setShowModal(state => !state);\n  };\n\n  return (\n    <Container>\n      <Searchbar onSubmit={onChangeQuery} />\n      {error && <h1>{error.message}</h1>}\n\n      {images && !error && <ImageGallery items={images} onClick={openModal} />}\n      {showModal && <Modal onClose={toggleModal} activeImage={activeImage} />}\n\n      {showLoader && <Loader />}\n      {showButton && (\n        <Button onClick={incrementPage} aria-label=\"Load More\">\n          Load More\n        </Button>\n      )}\n\n      <ToastContainer autoClose={3000} />\n    </Container>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Searchbar\":\"Searchbar_Searchbar__7otbO\",\"SearchForm\":\"Searchbar_SearchForm__qhwEj\",\"button\":\"Searchbar_button__o8iqd\",\"buttonLabel\":\"Searchbar_buttonLabel__1p7lO\",\"input\":\"Searchbar_input__24T_Q\"};"],"sourceRoot":""}